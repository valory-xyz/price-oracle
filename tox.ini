; By default, testenvs are configured to:
; - don't skip dist (skipsdist = False)
; - don't skip the package installation (skip_install = False)
; - don't use source installation (usedevelop = False)
; where one of those steps is not necessary for the test,
; we set the associated flag (e.g. for linting we don't need
; the package installation).
[tox]
envlist = bandit, safety, black, black-check, isort, isort-check, check-copyright, check-hash, check-packages, check-pipfiles, flake8, mypy, pylint, darglint, vulture, check-generate-all-protocols, check-abciapp-specs, check-abci-docstrings, check-handlers, py{3.7,3.8,3.9,3.10}-{win,linux,darwin}
; when running locally we don't want to fail for no good reason
skip_missing_interpreters = true

[deps-tests]
deps =
    tomte[tests]==0.1.5
    mistune==2.0.3

[deps-packages]
deps =
    {[deps-tests]deps}
    aiohttp==3.7.4.post0
    asn1crypto==1.4.0
    cosmpy==0.3.1
    grpcio==1.43.0
    hypothesis==6.21.6
    joblib==1.1.0
    numpy==1.21.6
    open-aea-ledger-cosmos==1.25.0
    open-aea-test-autonomy==0.5.0
    open-autonomy[all]==0.5.0
    pandas==1.3.5
    pandas-stubs==1.2.0.62
    protobuf==3.19.4
    pytz==2022.2.1
    py-ecc==5.2.0
    py-eth-sig-utils==0.4.0
    scikit-learn==1.0.2
    statsmodels==0.13.2

[deps-base]
deps ={[deps-packages]deps}

[testenv-multi-ubuntu]
deps = {[deps-base]deps}

[testenv-multi-win]
deps =
    {[deps-base]deps}
    pywin32==304
    websocket-client==0.59.0
    certifi==2021.10.8
    idna==3.3

[testenv-multi-darwin]
deps = {[deps-base]deps}

[testenv]
basepython = python3
whitelist_externals = /bin/sh
deps =
    {[deps-base]deps}
passenv = *
extras = all
setenv =
    PYTHONHASHSEED=0
    PYTHONPATH={env:PWD:%CD%}

[commands-base]
commands =
    autonomy init --reset --author CI --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync

[commands-packages]
commands =
    {[commands-base]commands}
    pytest -rfE packages/valory/contracts/offchain_aggregator/tests --cov=packages/valory/contracts/offchain_aggregator --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}
    pytest -rfE packages/valory/skills/oracle_abci/tests --cov=packages/valory/skills/oracle_abci --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}
    pytest -rfE packages/valory/skills/oracle_deployment_abci/tests --cov=packages/valory/skills/oracle_deployment_abci --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}
    pytest -rfE packages/valory/skills/price_estimation_abci/tests --cov=packages/valory/skills/price_estimation_abci --cov-report=xml --cov-report=term --cov-report=term-missing --cov-config=.coveragerc {posargs}

[commands-e2e]
commands =
    {[commands-base]commands}
    autonomy test by-path packages/valory/agents/oracle

[testenv:py3.7-linux]
basepython = python3.7
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.7-linux]
basepython = python3.7
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-e2e]commands}

[testenv:py3.8-linux]
basepython = python3.8
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.8-linux]
basepython = python3.8
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-e2e]commands}

[testenv:py3.9-linux]
basepython = python3.9
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.9-linux]
basepython = python3.9
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-e2e]commands}

[testenv:py3.10-linux]
basepython = python3.10
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.10-linux]
basepython = python3.10
platform=^linux$
deps = {[testenv-multi-ubuntu]deps}
commands = {[commands-e2e]commands}

[testenv:py3.7-win]
basepython = python3.7
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.7-win]
basepython = python3.7
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-e2e]commands}

[testenv:py3.8-win]
basepython = python3.8
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.8-win]
basepython = python3.8
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-e2e]commands}

[testenv:py3.9-win]
basepython = python3.9
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.9-win]
basepython = python3.9
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-e2e]commands}

[testenv:py3.10-win]
basepython = python3.10
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.10-win]
basepython = python3.10
platform=^win32$
deps = {[testenv-multi-win]deps}
commands = {[commands-e2e]commands}

[testenv:py3.7-darwin]
basepython = python3.7
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.7-darwin]
basepython = python3.7
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-e2e]commands}

[testenv:py3.8-darwin]
basepython = python3.8
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.8-darwin]
basepython = python3.8
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-e2e]commands}

[testenv:py3.9-darwin]
basepython = python3.9
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.9-darwin]
basepython = python3.9
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-e2e]commands}

[testenv:py3.10-darwin]
basepython = python3.10
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-packages]commands}

[testenv:e2e-py3.10-darwin]
basepython = python3.10
platform=^darwin$
deps = {[testenv-multi-darwin]deps}
commands = {[commands-e2e]commands}

[testenv:bandit]
skipsdist = True
skip_install = True
deps =
    tomte[bandit]==0.1.5
commands =
    bandit -s B101 -r packages/valory/skills/oracle_abci
    bandit -s B101 -r packages/valory/skills/oracle_deployment_abci
    bandit -s B101 -r packages/valory/skills/price_estimation_abci
    bandit -s B101 -r scripts

[testenv:black]
skipsdist = True
skip_install = True
deps =
    tomte[black]==0.1.5
commands =
    black packages/valory/skills/oracle_abci packages/valory/skills/oracle_deployment_abci packages/valory/skills/price_estimation_abci scripts

[testenv:black-check]
skipsdist = True
skip_install = True
deps =
    tomte[black]==0.1.5
commands =
    black --check packages/valory/skills/oracle_abci packages/valory/skills/oracle_deployment_abci packages/valory/skills/price_estimation_abci scripts

[testenv:isort]
skipsdist = True
skip_install = True
deps =
    tomte[isort]==0.1.5
commands =
    isort packages/valory --gitignore
    isort scripts/

[testenv:isort-check]
skipsdist = True
skip_install = True
deps =
    tomte[isort]==0.1.5
commands =
    isort --check-only --gitignore packages/valory scripts

[testenv:check-copyright]
skipsdist = True
skip_install = True
deps =
commands =
    {toxinidir}/scripts/check_copyright.py --check

[testenv:fix-copyright]
skipsdist = True
skip_install = True
deps =
commands =
    {toxinidir}/scripts/check_copyright.py

[testenv:check-hash]
skipsdist = True
usedevelop = True
deps = open-autonomy[all]==0.5.0
commands =
    autonomy init --reset --author CI --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy packages lock --check

[testenv:check-packages]
skipsdist = True
usedevelop = True
deps = {[deps-packages]deps}
commands =
    autonomy init --reset --author CI --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy check-packages

[testenv:check-pipfiles]
skipsdist = True
usedevelop = True
deps =
commands =
    {toxinidir}/scripts/check_pipfiles.py

[testenv:flake8]
skipsdist = True
skip_install = True
deps =
    tomte[flake8]==0.1.5
commands =
    flake8 packages/valory/skills/oracle_abci packages/valory/skills/oracle_deployment_abci packages/valory/skills/price_estimation_abci scripts

[testenv:mypy]
skipsdist = True
skip_install = True
deps =
    tomte[mypy]==0.1.5
commands =
    mypy packages/valory/skills/oracle_abci packages/valory/skills/oracle_deployment_abci packages/valory/skills/price_estimation_abci scripts --disallow-untyped-defs

[testenv:pylint]
whitelist_externals = /bin/sh
skipsdist = True
deps =
    {[deps-packages]deps}
    tomte[pylint]==0.1.5
commands =
    pylint --rcfile=setup.cfg packages/valory/skills/oracle_abci packages/valory/skills/oracle_deployment_abci packages/valory/skills/price_estimation_abci scripts

[testenv:safety]
skipsdist = True
skip_install = True
deps =
    tomte[safety]==0.1.5
commands =
    safety check -i 37524 -i 38038 -i 37776 -i 38039 -i 39621 -i 40291 -i 39706 -i 41002 -i 51358 -i 51499

[testenv:vulture]
skipsdist = True
skip_install = True
deps =
    tomte[vulture]==0.1.5
commands =
    vulture scripts/whitelist.py

[testenv:darglint]
skipsdist = True
skip_install = True
deps =
    tomte[darglint]==0.1.5
commands =
    darglint packages/valory/skills/oracle_abci packages/valory/skills/oracle_deployment_abci packages/valory/skills/price_estimation_abci scripts

[testenv:check-generate-all-protocols]
skipsdist = True
usedevelop = True
deps =
    {[deps-packages]deps}
    tomte[isort]==0.1.5
    tomte[black]==0.1.5
commands =
    autonomy generate-all-protocols --check-clean

[testenv:spell-check]
whitelist_externals = mdspell
skipsdist = True
usedevelop = True
deps =
commands =
    {toxinidir}/scripts/spell-check.sh

[testenv:abci-docstrings]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse docstrings --update

[testenv:check-abci-docstrings]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse docstrings

[testenv:check-abciapp-specs]
skipsdist = True
usedevelop = True
commands =
    autonomy init --reset --author CI --remote --ipfs --ipfs-node "/dns/registry.autonolas.tech/tcp/443/https"
    autonomy packages sync
    autonomy analyse fsm-specs

[testenv:check-handlers]
skipsdist = True
usedevelop = True
commands =
    autonomy analyse handlers -h abci -h http -h contract_api -h ledger_api -h signing -i abstract_abci -i counter -i counter_client -i hello_world_abci
